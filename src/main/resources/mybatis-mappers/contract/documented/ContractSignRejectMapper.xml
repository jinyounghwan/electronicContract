<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.samsung.framework.mapper.contract.documented.ContractSignRejectMapper">
    <sql id="whereClause">
        and c.process_status = 'PRCS2004'
        and c.doc_status = 'PRCS1004'
        <if test="(startDt != null and startDt != '') and (endDt != null and endDt != '')">
            <choose>
                <when test="searchDateType == 'CREATED_AT'">
                    AND c.created_at BETWEEN DATE(#{startDt}) AND DATE(#{endDt})+1
                </when>
                <when test="searchDateType == 'UPDATED_AT'">
                    AND c.updated_at BETWEEN DATE(#{startDt}) AND DATE_ADD(DATE(#{endDt}), INTERVAL 1 DAY)
                </when>
                <when test="searchDateType == 'ALL'">
                    AND c.created_at BETWEEN DATE(#{startDt}) AND DATE_ADD(DATE(#{endDt}), INTERVAL 1 DAY)
                    AND c.updated_at BETWEEN DATE(#{startDt}) AND DATE_ADD(DATE(#{endDt}), INTERVAL 1 DAY)
                </when>
            </choose>
        </if>
        <if test="@com.samsung.framework.common.utils.StringUtil@isNotEmpty(searchKeyword)">
            <choose>
                <when test="searchKeywordType == 'TITLE'">
                    and ct.template_title like concat('%',#{searchKeyword},'%')
                </when>
                <when test="searchKeywordType == 'EMPLOYEE_ID'">
                    and c.emp_no like concat('%',#{searchKeyword},'%')
                </when>
                <when test="searchKeywordType == 'NAME'">
                    and c.name like concat('%',#{searchKeyword},'%')
                </when>
                <when test="searchKeywordType == 'ALL'">
                    and c.emp_no like concat('%',#{searchKeyword},'%')
                    or ct.template_title like concat('%',#{searchKeyword},'%')
                    or c.name like concat('%',#{searchKeyword},'%')
                </when>
            </choose>
        </if>
    </sql>
    <select id="getContractSignRejectList" parameterType="SearchVO" resultType="ContractVO">
           SELECT c.contract_no
                , c.emp_no
                , c.template_seq
                , c.doc_status
                , c.process_status
                , c.signature_data_no
                , c.validation
                , c.agree_yn
                , c.del_yn
                , c.created_by
                , c.created_at
                , c.updated_by
                , date_format(c.updated_at , '%Y-%m-%d')as updated_at
                , ct.template_title
                , c.name
                , ctd.contract_title_en
                , c.dept_code
            from contracts c
            join contract_template ct
              on c.template_seq = ct.template_seq
            join contract_template_details ctd
              on ct.template_seq = ctd.template_seq
        where c.del_yn = 'N'
        <include refid="whereClause"/>
        order by c.created_at desc
        LIMIT #{paging.displayRow} OFFSET #{paging.offset}
    </select>

    <select id="getContractSignRejectCount" resultType="int" parameterType="SearchVO">
        SELECT COUNT(c.CONTRACT_NO)
        FROM CONTRACTS C
        JOIN CONTRACT_TEMPLATE CT
        ON C.TEMPLATE_SEQ = CT.TEMPLATE_SEQ
        JOIN USERS U
        ON C.EMP_NO = U.EMP_NO
        where C.del_yn = 'N'
        <include refid="whereClause"/>
    </select>


    <select id="getContractSignRejectInfo" parameterType="String" resultType="ContractVO">
        SELECT c.contract_no
            , c.emp_no
            , c.template_seq
            , c.doc_status
            , c.process_status
            , c.signature_data_no
            , c.validation
            , c.agree_yn
            , c.del_yn
            , c.created_by
            , c.created_at
            , c.updated_by
            , c.updated_at
            , ct.template_title
            , c.name
            , c.sign_date
            , ctd.contract_title_en
            , c.dept_code
            , c.reject_reason
            , c.assigned_at
            , c.assigned_by
        from contracts c
        join contract_template ct
        on c.template_seq = ct.template_seq
        join contract_template_details ctd
        on ct.template_seq = ctd.template_seq
        where c.contract_no = #{seq}
    </select>
</mapper>