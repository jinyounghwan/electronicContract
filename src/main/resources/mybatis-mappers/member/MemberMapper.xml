<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.samsung.framework.mapper.member.MemberMapper">

    <select id="memberListCount">
        SELECT COUNT(1) FROM USERS
    </select>

    <select id="memberListSearchCount">
        SELECT COUNT(1) FROM USERS
        <where></where>
        ORDER BY EMP_NO DESC
    </select>

    <select id="getMemberList" resultType="MemberVO">
        SELECT EMP_NO, DEPT_CODE, USER_ID, USER_PW, NAME, POSITION, EMAIL, PHONE FROM USERS ORDER BY EMP_NO DESC
        <include refid="mapper.paging.pagingQuery"/>
    </select>

    <select id="findMemberById" resultType="MemberVO">
        SELECT EMP_NO, DEPT_CODE, USER_ID, USER_PW, NAME, POSITION, EMAIL, PHONE FROM USERS WHERE USER_ID = #{id}
    </select>

<!--#################### DEJAY_COMMON ####################-->
    <select id="findMemberByUserName" resultType="MemberVO">
                 SELECT U.EMP_NO, U.DEPT_CODE, U.USER_ID, U.USER_PW, U.NAME, U.POSITION, U.EMAIL
                   FROM USERS U
                 WHERE NAME = #{name}
    </select>

    <!-- 최근 로그인 이력 저장을 위한 정보 조회 -->
    <select id="getLoginInfo" resultType="MemberVO">
                 SELECT U.EMP_NO, U.DEPT_CODE, U.USER_ID, U.USER_PW, U.NAME, U.EMAIL, U.ACCOUNT_TYPE, U.PHONE
                   FROM USERS U
                  WHERE USER_ID = #{userId}
    </select>

    <!-- 정확한 화면나오면 수정-->
    <select id="findAllUsers">
        /* 전체 사용자 조회 - MemberMapper.findAllUsers */
        WITH DEPT AS (
        SELECT CODE_NM, CODE_CD
        FROM INFO_COMMON_CD WHERE SUBSTRING(CODE_CD FROM 1 FOR 4) = 'DEPT' AND DEL_YN = 'N' AND USE_YN = 'Y'
        )
        SELECT A.* FROM (
            SELECT USERS.USER_SEQ
            , USERS.USER_ID
            , USERS.USER_NM
            , USERS.DEPT_CD
            , USERS.APPOINT_CD
            , USERS.POSITION_CD
            , (SELECT CODE_NM FROM DEPT WHERE CODE_CD = USERS.DEPT_CD) AS DEPT_NM
            , (SELECT CODE_NM FROM DEPT WHERE CODE_CD = USERS.APPOINT_CD) AS APPOINT_NM
            , (SELECT CODE_NM FROM DEPT WHERE CODE_CD = USERS.POSITION_CD) AS POSITION_NM
            FROM INFO_USER USERS
            WHERE DEL_YN = 'N' AND USE_YN = 'Y'
        ) A
        <if test="searchWord1 != null and searchWord1 != ''">
            <where>
                A.USER_NM LIKE CONCAT('%', #{searchWord1}, '%') OR A.DEPT_NM LIKE CONCAT('%', #{searchWord1}, '%') OR A.POSITION_NM LIKE CONCAT('%', #{searchWord1}, '%')
            </where>
        </if>
    </select>


    <insert id="insert" useGeneratedKeys="true">
        INSERT INTO USERS
            (
             EMP_NO, DEPT_CODE
            , USER_PW, NAME
            , ACCOUNT_TYPE, POSITION
            ,EMAIL, PHONE
            , USE_YN, EMPLOYED_AT
            , RESIGNED_AT, CREATED_BY
            , CREATED_AT, UPDATED_BY
            , UPDATED_AT
            )
             VALUES(
                     #{empNo}, #{deptCode}
                    , #{userPw}, #{name}
                    , #{accountType}, #{position}
                    , #{email}, #{phone}
                    ,'Y', #{employedAt}
                    , #{resignedAt}, 'admin'
                    , sysdate(),'admin'
                    , sysdate()
             )
        <selectKey keyProperty="logId1" resultType="String">
             SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updatePwd">
        UPDATE USER U
        SET USER_PWD = #{userPw}
        WHERE U.USER_ID = #{userId}
    </update>
</mapper>