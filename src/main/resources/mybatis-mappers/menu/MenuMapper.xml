<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.samsung.framework.mapper.menu.MenuMapper">
    <!-- 공통 [[ -->

    <!-- column [[ -->

    <sql id="menuColumn">
            ${alias}MENU_SEQ, ${alias}MENU_CODE
            , ${alias}NAME, ${alias}ORD
            , ${alias}PATH, ${alias}DISPLAY_YN
            , ${alias}USE_YN, ${alias}DEL_YN
            , ${alias}CREATED_BY, ${alias}CREATED_AT
            , ${alias}UPDATED_BY, ${alias}UPDATED_AT
    </sql>


    <!-- column ]] -->

    <!-- whereClause [[ -->
    <sql id="whereClause">
        <if test="name != null and name != '' ">
            AND ${alias}NAME = #{name}
        </if>
        <if test="menuCode != null and menuCode != '' ">
            AND ${alias}MENU_CODE = #{menuCode}
        </if>
    </sql>
    <!--상위 메뉴 조건 들어갈 곳 -->
    <sql id= "whereClausePSeq">

    </sql>

    <sql id = "whereClauseId">
        AND ${alias}MENU_CODE = #{menu_Code}
    </sql>



    <!-- whereClause ]] -->

    <!-- orderClause [[ -->



    <!-- orderClause ]] -->

    <!-- 공통 ]] -->

    <!-- 조회 [[ -->

    <select id="getLgMenuList" resultType="MenuVO">
        /* 대메뉴 조회 - MenuMapper.getLgMenuList */
        SELECT
            DISTINCT MN.MENU_CODE AS MENU_CODE, MN.NAME AS NAME
             , MN.PATH AS PATH, MN.MENU_SEQ AS MENU_SEQ
        FROM
            MENU MN
                INNER JOIN MENU_AUTHORIZATION MA ON MN.MENU_SEQ = MA.MENU_SEQ
        WHERE
            SUBSTRING(MN.MENU_CODE FROM 7 FOR 4) = '0000'
            AND SUBSTRING(MN.MENU_CODE FROM 5 FOR 6) NOT IN ('000000')
            AND MN.USE_YN = 'Y'
            AND MN.DEL_YN = 'N'
            AND MN.DISPLAY_YN = 'Y'
        <if test="userId != '' and userId != null">
            AND MA.AUTH_C = 'Y'
            AND MA.AUTH_R = 'Y'
            AND MA.AUTH_U = 'Y'
            AND MA.AUTH_D='Y'
            AND MA.AUTH_F='Y'
            AND MA.GRANT_TO =  #{userId}
        </if>
        ORDER BY ORD ASC;

    </select>

    <select id="getMidMenuList" resultType="MenuVO">
        /* 중간 메뉴 조회 - MenuMapper.getMidMenuList */
        WITH SRCH_MENU AS(
            SELECT
                MN.MENU_CODE PARENT_CODE
            FROM MENU MN
            WHERE
                SUBSTRING(MN.MENU_CODE FROM 7 FOR 4) = '0000'
              AND SUBSTRING(MN.MENU_CODE FROM 5 FOR 6) NOT IN ('000000')
        )
        SELECT  DISTINCT MN.MENU_CODE AS MENU_CODE, MN.NAME AS NAME
             , SMN.PARENT_CODE AS P_MENU_CODE , MN.PATH AS PATH
             , MN.MENU_SEQ AS MENU_SEQ
        FROM MENU MN
                 INNER JOIN SRCH_MENU SMN ON SUBSTRING(MN.MENU_CODE FROM 5 FOR 2) = SUBSTRING(SMN.PARENT_CODE FROM 5 FOR 2)
                 INNER JOIN MENU_AUTHORIZATION MA ON MN.MENU_SEQ = MA.MENU_SEQ
        WHERE SUBSTRING(MN.MENU_CODE FROM 9 FOR 2) IN ('00') AND SUBSTRING(MN.MENU_CODE FROM 7 FOR 4) NOT IN ('0000')
            AND MN.USE_YN = 'Y'
            AND MN.DEL_YN = 'N'
            AND MN.DISPLAY_YN = 'Y'
        <if test="userId != '' and userId != null">
            AND MA.AUTH_C = 'Y'
            AND MA.AUTH_R = 'Y'
            AND MA.AUTH_U = 'Y'
            AND MA.AUTH_D='Y'
            AND MA.AUTH_F='Y'
            AND MA.GRANT_TO =  #{userId}
        </if>
        ORDER BY ORD ASC
    </select>

   <select id="getSmMenuList" resultType="MenuVO">
        /* 소메뉴 조회 - MenuMapper.getSmMenuList */
        WITH SRCH_MENU AS(
            SELECT
                MN.MENU_CODE PARENT_CODE
            FROM MENU MN
            WHERE
                SUBSTRING (MN.MENU_CODE FROM 9 FOR 2) IN ('00') AND SUBSTRING(MN.MENU_CODE FROM 7 FOR 4) NOT IN ('0000')
        )
        SELECT   DISTINCT MN.MENU_CODE AS MENU_CODE, MN.NAME AS NAME
             ,MN.PATH AS PATH , SMN.PARENT_CODE AS P_MENU_CODE
             ,MN.MENU_SEQ AS MENU_SEQ
        FROM MENU MN
                 INNER JOIN SRCH_MENU SMN ON SUBSTRING(MN.MENU_CODE FROM 5 FOR 4) = SUBSTRING(SMN.PARENT_CODE FROM 5 FOR 4)
                 INNER JOIN MENU_AUTHORIZATION MA ON MN.MENU_SEQ = MA.MENU_SEQ
        WHERE SUBSTRING(MN.MENU_CODE FROM 9 FOR 2) NOT IN('00')
            AND MN.USE_YN = 'Y'
            AND MN.DEL_YN = 'N'
            AND MN.DISPLAY_YN = 'Y'
       <if test="userId != '' and userId != null">
            AND MA.AUTH_C = 'Y'
            AND MA.AUTH_R = 'Y'
            AND MA.AUTH_U = 'Y'
            AND MA.AUTH_D='Y'
            AND MA.AUTH_F='Y'
            AND MA.GRANT_TO =  #{userId}
       </if>
        ORDER BY ORD ASC
        </select>

    <select id="rowByKey" resultType="Long" parameterType="String">
        /* 메뉴 SEQ 값 조회 */
        SELECT MN.MENU_SEQ
        FROM MENU MN
        <where>
            <include refid="whereClauseId"><property name="alias" value="MN."/></include>
        </where>
    </select>

    <!-- 저장/수정/삭제 [[ -->

    <insert id="insert" useGeneratedKeys="true">
        /* 메뉴 삽입 - MenuMapper.insertMenu*/
            INSERT INTO MENU
                (MENU_CODE,
                 NAME,
                 ORD,
                 DISPLAY_YN,
                 USE_YN,
                 DEL_YN,
                 CREATE_BY,
                 CREATE_AT,
                 UPDATE_BY,
                 UPDATE_AT
                 )
            VALUES ( #{menuCode},
                     #{name},
                     #{ord},
                     #{displayYn},
                     #{useYn},
                     #{delYn},
                     #{createBy},
                     #{createAt},
                     #{updateBy},
                     #{updateAt}
                     )
            <selectKey keyProperty="logId1" resultType="String">
                SELECT LAST_INSERT_ID()
            </selectKey>
    </insert>

</mapper>